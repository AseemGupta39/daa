#include <stdio.h>

void find_waiting_time(int[] processes,int[] at,int n,int[] bt,int[] wt)
{
    int service_time[n];
    service_time[0] = at[0];
    wt[0] = 0;
    
    for(int i =1;i<n;i++)	
    {
        service_time[i] = service_time[i-1] + bt[i-1];
	wt[i] = service_time[i] - at[i]
	
	if(wt[i] < 0)
	{
	    wt[i] = 0;
	}

	
    }
}





echo "enter 3 integer"
read a b c
if [$a -gt $b -a $a -gt $c]
then 
echo "$a is greatest"
elif [$b -gt $a -a $b -gt $c]
then
echo "$b is greatest"
else
echo "$c is greatest"
fi




echo -e "program to find factorial of num\nenter a number"
read num

fact=1
for((i=2;i<=num;i++))
{
	fact=$((fact * $i))
}

echo $fact


read num
sum=0
while [$num -gt 0]
do
    rem=`expr $num % 10`
    sum=`expr $sum + $rem`
    num=`expr $num / 10`
done
echo $sum




echo "multiplication table"
read -p "enter number: " n
i=0
for((i=1;i<15;i++))
do
echo "$n x $i = `expr $n \* $i`"
done 







echo -e "\n
1 for count users\n
2 list of users list in\n"

read ui
case $ui in
    1)
    who --count | grep users
    ;;
    2)
    who -q | grep -v users
    ;;
*)
    echo -e "enter correct option \n"
;;
esac







echo -e "\n
1 for  add\n
2 for sub\n
3 for mul\n
4 for div\n"
read -p "enter number 1: " a
read -p "enter number 2: " b
read -p "enter user input: " ui	
ans=0 
case $ui in
    1)
    ans=`expr $a + $b`
    ;;
    2)
    ans=`expr $a - $b`
    ;;
    3)
    ans=`expr $a \* $b`
    ;;
    4)
    ans=`expr $a / $b`
    ;;
*)
    echo -e "enter correct option \n"
    exit
;;
esac
echo "$ans"  

telnet 10.16.0.10




